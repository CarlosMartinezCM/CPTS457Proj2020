{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LoginPage.js","components/HomePage.js","components/AboutBox.js","components/twoFactor.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","HOMEPAGE","TWOFACTOR","Object","freeze","NavBar","getMenuBtnIcon","props","mode","ROUNDS_LOGROUND","ROUNDS_EDITROUND","menuOpen","handleMenuBtnClick","changeMode","ROUNDS","toggleMenuOpen","className","onClick","this","id","title","React","Component","SideMenu","renderModeMenuItems","src","profilePicURL","height","width","displayName","showAbout","logOut","CreateEditAccountDialog","checkAccountValidity","state","accountPassword","accountPasswordRepeat","repeatPassRef","current","setCustomValidity","handleNewAccountChange","event","target","name","value","length","setState","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","setDefaultDisplayName","handleCreateAccount","a","preventDefault","url","accountName","accountInfo","password","phoneNumber","accountPhoneNumber","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","fetch","headers","method","body","JSON","stringify","res","status","accountCreateStatus","text","resText","newUserRef","createRef","role","cancelCreateAccount","onSubmit","type","size","placeholder","pattern","required","ref","onChange","onBlur","accept","profilePic","ResetPasswordDialog","showResetPasswordDialog","handleLookAccount","AccountEmailRef","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","loginMsg","msg","accountCreateMsg","showCreateAccountDialog","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","focus","htmlFor","style","padding","fontSize","HomePage","color","fontStyle","AboutBox","hideAbout","twoFactor","handleChange","handleSubmitCode","sendText","submitting","message","then","json","data","success","error","recipient","SMScode","val","random","textmessage","modeTitle","modeToPage","App","refreshOnUpdate","newMode","userObj","response","obj","parse","toggleAbout","prevState","handleChangeMode","openMenu","closeMenu","setUserId","Id","userId","authenticated","setUserObjType","newType","mode1","editAccount","showEditAccountDialog","isAuthenticated","user","ModePage","localAccount","authStrategy","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c04d662.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    HOMEPAGE: \"HomePageMode\",\r\n    TWOFACTOR: \"SMSMode\",\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n  //The img here is for the Icon that appears on the top left corner. \r\n  render() {\r\n    return (\r\n    <div className=\"navbar\">  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\nimport App from './App.js';\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.HOMEPAGE:\r\n      return(\r\n        <div>\r\n         <a className=\"sidemenu-item\" >\r\n            <span ></span>&nbsp;Account</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.HOMEPAGE:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\" >\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Button</a>\r\n        </div>\r\n      );\r\n    break;\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n              <img src={this.props.profilePicURL} height='60' width='60' />\r\n              <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n          </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\"\r\n              onClick={this.props.showAbout}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\"\r\n             onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n            \r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        //Create a ref for the email input DOM element\r\n        this.newUserRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.profilePicRef = React.createRef();\r\n        this.state = {accountName: \"\",\r\n                      displayName: \"\",                      \r\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                      accountPassword: \"\",\r\n                      accountPasswordRepeat: \"\",\r\n                      accountPhoneNumber: \"\",\r\n                      accountSecurityQuestion: \"\",\r\n                      accountSecurityAnswer: \"\"};\r\n\r\n    }\r\n\r\n    //checkAccountValidity -- Callback function invoked after a form element in\r\n    //the 'Create Account' dialog box changes and component state has been\r\n    //updated. We need to check whether the passwords match. If they do not, \r\n    //we set a custom validity message to be displayed when the user clicks the\r\n    //'Create Account' button. Otherwise, we reset the custom validity message\r\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n    checkAccountValidity = () => {\r\n        if (this.state.accountPassword != this.state.accountPasswordRepeat) {\r\n            //Passwords don't match\r\n            this.repeatPassRef.current.setCustomValidity(\r\n            \"This password must match original password.\");\r\n        } else {\r\n            this.repeatPassRef.current.setCustomValidity(\"\");\r\n        }\r\n    }\r\n\r\n    //function to check if the password matches criteria, sanitation.\r\n\r\n\r\n    //handleNewAccountChange--Called when a field in a dialog box form changes.\r\n    handleNewAccountChange = (event) => {\r\n        if (event.target.name === \"profilePic\") {\r\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\r\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\"});\r\n            } else { //The user selected a file\r\n                const self = this;\r\n                const val = event.target.value;\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n                reader.addEventListener(\"load\",function() {\r\n                    self.setState({profilePicURL: this.result});\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({[event.target.name]: event.target.value},this.checkAccountValidity);\r\n        }\r\n    } \r\n\r\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n    //Sets default value of display name to value entered into Email field \r\n    //as a courtesy.\r\n    setDefaultDisplayName = (event) => {\r\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n        this.setState({displayName: event.target.value});\r\n      }\r\n    }\r\n\r\n    //handleCreateAccount -- Triggered when user clicks on \"Create Account\" button.\r\n    //Custom data checking ensures user account under this email does not \r\n    //already exist and that the rest of the info is valid. We create a new  \r\n    // object for user, save it to localStorage and take user to app's \r\n    //landing page. \r\n    handleCreateAccount = async (event) =>{\r\n        event.preventDefault();\r\n        const url = '/users/' + this.state.accountName;\r\n        const accountInfo = {\r\n            displayName: this.state.displayName,\r\n            password: this.state.accountPassword,\r\n            phoneNumber: this.state.accountPhoneNumber,\r\n            profilePicURL: this.state.profilePicURL,\r\n            securityQuestion: this.state.accountSecurityQuestion,\r\n            securityAnswer: this.state.accountSecurityAnswer,\r\n        };\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(accountInfo)}); \r\n        if (res.status == 200) { //successful account creation!\r\n            this.props.accountCreateStatus(\"New account created! Enter credentials to log in.\");\r\n        } else { //Unsuccessful account creation\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.accountCreateStatus(resText);\r\n        }\r\n    }\r\n\r\n    render() {\r\n    return (\r\n    <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n            <center>\r\n            <h3 className=\"modal-title\"><b>New Account</b></h3>\r\n            </center>\r\n            <button className=\"close\" \r\n                onClick={this.props.cancelCreateAccount}>\r\n                &times;</button>\r\n            </div>\r\n            <p>* Required</p>\r\n            <div className=\"modal-body\">\r\n            <form onSubmit={this.handleCreateAccount}>\r\n            <label>\r\n                *Email: \r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountName\"\r\n                type=\"email\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Email Address\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                ref={this.newUserRef}\r\n                value={this.state.accountName}\r\n                onChange={this.handleNewAccountChange}\r\n                onBlur={this.setDefaultDisplayName}\r\n                />\r\n            </label>\r\n            <label>\r\n                *Password: Must contain 10 characters \r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountPassword\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=(?:.*[@#$%^?])).{10,}$\"\r\n                required={true}\r\n                value={this.state.accountPassword}\r\n                onChange={this.handleNewAccountChange}\r\n                />\r\n            </label>\r\n            <label>\r\n                *Repeat Password:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountPasswordRepeat\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Repeat Password\"\r\n                required={true}\r\n                ref={this.repeatPassRef}\r\n                value={this.state.accountPasswordRepeat}\r\n                onChange={this.handleNewAccountChange}\r\n                />\r\n            </label>\r\n            <label>\r\n                *Phone Number:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountPhoneNumber\"\r\n                type=\"text\"\r\n                size=\"30\"\r\n                placeholder=\"1 000 000 0000\"\r\n                required={true}\r\n                value={this.state.accountPhoneNumber}\r\n                onChange={this.handleNewAccountChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                *Username:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"displayName\"\r\n                type=\"text\"\r\n                size=\"30\"\r\n                placeholder=\"Username\"\r\n                required={true}\r\n                value={this.state.displayName}\r\n                onChange={this.handleNewAccountChange}\r\n                />\r\n            </label>\r\n            <label>\r\n                Profile Picture:<br/>\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"profilePic\"\r\n                type=\"file\"\r\n                accept=\"image/x-png,image/gif,image/jpeg\" \r\n                ref={this.profilePicRef}\r\n                value={this.state.profilePic}\r\n                onChange={this.handleNewAccountChange}\r\n                />\r\n                <img src={this.state.profilePicURL} \r\n                        height=\"60\" width=\"60\" />\r\n            </label> \r\n           \r\n            <br/>\r\n            <button role=\"submit\" \r\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\r\n                <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\r\n            </button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n    }\r\n    }\r\n\r\nexport default CreateEditAccountDialog;","import React from 'react';\r\n\r\nclass ResetPasswordDialog extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"modal\" role=\"dialog\">\r\n          <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n                       <center>\r\n                        <h3 className=\"modal-tittle\"><b>Look up Account</b>\r\n                            <button className=\"close\"\r\n                               onClick={()=> {this.setState({showResetPasswordDialog: false})}}>\r\n                                   &times;</button>\r\n                        </h3>\r\n                        </center>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form onSubmit={this.handleLookAccount}>\r\n                            <label>\r\n                                Account Email Address:\r\n                                <input\r\n                                className=\"form-control form-text\"\r\n                                type=\"email\"\r\n                                size=\"35\"\r\n                                placeholder=\"Enter Email Address\"\r\n                                pattern=\"[A-Za-z0-9._%+-]+@[a-Za-z0-9.-]+\\.[a-Za-z]{2,}\"\r\n                                ref={this.AccountEmailRef}\r\n                                required={true}\r\n                                />\r\n                            </label>\r\n                            <button type=\"submit\"\r\n                                className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                                    <span className=\"fa fa-search\"></span>&nbsp;Loop Up Account\r\n                                </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n       </div>      \r\n       );\r\n    }   \r\n}\r\n\r\nexport default ResetPasswordDialog;","import React from 'react';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\r\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\nconstructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.passwordInputRef = React.createRef();\r\n    this.state = {accountCreateMsg: \"\",\r\n                  loginBtnIcon: \"fa fa-sign-in\",\r\n                  loginBtnLabel: \"Log In\",\r\n                  showCreateAccountDialog: false,\r\n                  showResetPasswordDialog: false,\r\n                  loginMsg: \"\"\r\n                  };\r\n} \r\n    \r\n//Focus cursor in email input field when mounted\r\ncomponentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n}  \r\n\r\n//handleLoginSubmit -- Called when user clicks on login button.\r\nhandleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value +\r\n                \"&password=\" + this.passwordInputRef.current.value;\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     loginMsg: resText});\r\n    }\r\n}\r\n\r\n  //accountCreateStatus -- Called by child CreateAccountDialog component when \r\n  //user attempted to create new account. Hide the dialog and display \r\n  //a message indicating result of the attempt.\r\n  accountCreateStatus = (msg) => {\r\n      this.setState({accountCreateMsg: msg,\r\n                     showCreateAccountDialog: false});\r\n  }\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  showResetPasswordDialog = () => {\r\n      this.setState({showCreateAccountDialog: false});\r\n  }\r\n  cancelCreateAccount = () => {\r\n    this.setState({showCreateAccountDialog: false});\r\n}\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div id=\"login-mode-div\" className=\"padded-page\">\r\n             <br />\r\n            <br />\r\n        <center>\r\n        <img src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRP2LAcD7cotvQybIVkSQ4AXrBlAHKrdiukGA&usqp=CAU\"} height='200' width='200' />\r\n            <br />\r\n            <h1 />\r\n            {this.state.accountCreateMsg != \"\" ? <p className=\"emphasis\">{this.state.accountCreateMsg}</p> : null}\r\n            {this.state.loginMsg != \"\" ? <p className=\"emphasis\">{this.state.loginMsg}</p> : null}\r\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                \r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                &nbsp;{this.state.loginBtnLabel}\r\n            </button>\r\n            <p>\r\n            <br />\r\n            <br />\r\n            <button type=\"button\" className=\"btn2-color-theme btn btn-link login-link\" \r\n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\r\n                No account? Create one!</button>      \r\n            <p>\r\n            <button type=\"button\" className=\"btn btn-link login-link\"\r\n                        >Need help signing in?</button>\r\n            </p>\r\n                <button type=\"button\" className=\"btn btn-link login-link\"\r\n                        onClick={() => {this.setState({showResetPasswordDialog: true});}}>\r\n                Reset your password</button>\r\n                <br />\r\n            <i>Version 2.1 CPTS_427 Project Demo</i>\r\n            <br />\r\n            </p>\r\n            </form>\r\n            {this.state.showCreateAccountDialog ? \r\n              <CreateEditAccountDialog \r\n                accountCreateStatus={this.accountCreateStatus}\r\n                cancelCreateAccount={this.cancelCreateAccount} /> : null}\r\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\r\n           \r\n        </center>\r\n        <br/>\r\n          <br/>\r\n          <br/>\r\n          \r\n        </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\n  /************************Dummy Data info web app***************************************************************************/\r\n  class HomePage extends React.Component {\r\n\r\n    constructor() {\r\n      super();\r\n      this.state = {color: \"#717171\" \r\n                    };\r\n  } \r\n      \r\n    render(){\r\n        return (\r\n          <div className=\"padded-page\">\r\n          <center>\r\n          <h1 >Hello,&nbsp;{this.props.displayName}</h1>\r\n          <img src={this.props.profilePicURL} height='400' width='400' />\r\n          <br/>\r\n          <p>Go Cougs!</p>\r\n          <p>Account Name: &nbsp;{this.props.displayName}</p>\r\n          <p>More items: </p>\r\n          \r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <p style={{fontStyle: \"italic\"}}>Version 2.1 Class Project CPTS_427</p>\r\n          </center>\r\n          <a id=\"logOutBtn\" className=\"logOut-Btn\"\r\n             onClick={this.props.logOut}>\r\n            <span className=\"floatbtn-icon\"></span>&nbsp;Log Out</a>\r\n      </div>\r\n      \r\n        );\r\n\r\n    }\r\n  }\r\n  export default HomePage;\r\n  ","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"modal\" role=\"dialog\">\r\n          <div className=\"modal-content\">\r\n           <div className=\"modal-header\">\r\n               <p className=\"modal-title\">2 FA Authentication</p>\r\n                  <button id=\"modalClose\" className=\"close\" \r\n                   onClick={this.props.hideAbout}>\r\n                      &times;</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          <center>\r\n          <h1 >Two factor Authorization</h1>\r\n          <h2>This app demonstrates how 2 factor authentication is helpful for accessing to files securly.</h2>\r\n          <img src=\"https://canestrinilex.com/assets/Uploads/blog-pics/f613404b87/Topsecretsidebar__ScaleWidthWzcwMF0.jpg\" \r\n           height=\"200\" width=\"200\"/>\r\n          <p style={{fontStyle: \"italic\"}}>Version 1.0 Class Project CPTS_427</p>\r\n          </center>\r\n              <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\"\r\n                 onClick={this.props.hideAbout}>\r\n                   OK</button>\r\n              </div>\r\n          </div>\r\n       </div>\r\n      </div>\r\n      \r\n                    );\r\n    }   \r\n}\r\n\r\nexport default AboutBox;","import React from 'react';\r\nimport { async } from 'regenerator-runtime';\r\nimport AppMode from './../AppMode.js'\r\nimport App from './App.js';\r\n\r\nclass twoFactor extends React.Component {\r\n    constructor() {\r\n        super();\r\n        //Create a ref for the email input DOM element\r\n       this.emailInputRef = React.createRef();\r\n        this.state = {\r\n            SMScode: \"\",\r\n            accountCreateMsg: \"\",\r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            loginMsg: \"\",\r\n            val: \"\",\r\n            random: 0,\r\n            message:{\r\n            recipient: \"\",\r\n            textmessage: \"\"\r\n            }\r\n\r\n        }\r\n      }\r\n \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({[name]: event.target.value});\r\n        \r\n    }\r\n    \r\n    //handleLoginSubmit -- Called when user clicks on login button.\r\n    handleSubmitCode = (event) => {\r\n    event.preventDefault();\r\n     this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n     setTimeout(1000);    \r\n     this.props.changeMode(AppMode.HOMEPAGE);\r\n    }\r\n   \r\n    sendText= (event) => {\r\n    event.preventDefault();\r\n    this.setState({ submitting: true });\r\n\r\n    //this.setState({message:{...this.state.message}})\r\n    //this.props.phoneNumber=this.state.message.recipient;\r\n    //value=this.state.message.textmessage;\r\n    fetch('/api/messages', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state.message)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          this.setState({\r\n            error: false,\r\n            submitting: false,\r\n            message: {\r\n              recipient: this.props.phoneNumber,\r\n              body: \"004732\"\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            error: true,\r\n            submitting: false\r\n          });\r\n        }\r\n      });\r\n             }\r\n              \r\n    //try adding the actual number where i have the number number displayed.\r\n    render() {\r\n        return(\r\n            \r\n            <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >SMS Authentication</h1>\r\n            \r\n            <img src=\"https://image.freepik.com/free-vector/2fa-icon-password-secure-login-authentication-verification-sms-push-code-messages-symbol-smartphone-mobile-phone-flat-isolated-pictogram_101884-953.jpg\" \r\n             height=\"300\" width=\"400\"/>\r\n\r\n             <h2> ({this.props.phoneNumber})</h2>\r\n             <span>&nbsp;</span>\r\n             \r\n              <form onSubmit={this.handleSubmitCode}>\r\n            <label>\r\n                Enter Code\r\n                <input\r\n                ref={this.SMScode}\r\n                className=\"form-control form-text form-center\"\r\n                name=\"SMSCode\"\r\n                type=\"SMSCode\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Code Here\"\r\n                required={true}               \r\n                />\r\n            </label>\r\n            </form>\r\n            <button type=\"submit\" \r\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\"\r\n                onClick={this.sendText}>\r\n                <span className=\"fa fa-user-plus\"></span>&nbsp;Send Code\r\n            </button>\r\n            \r\n            </center>\r\n            <a id=\"logOutBtn\" className=\"logOut-Btn\"\r\n               onClick={this.props.logOut}>\r\n              <span className=\"floatbtn-icon\"></span>&nbsp;Cancel</a>\r\n              <br/>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default twoFactor;\r\n","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport HomePage from './HomePage.js';\r\nimport AboutBox from './AboutBox.js';\r\nimport twoFactor from './twoFactor.js';\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Network Authentication\";\r\nmodeTitle[AppMode.HOMEPAGE] = \"Welcome Back!!\";\r\nmodeTitle[AppMode.TWOFACTOR] = \"SMS Authentication\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.HOMEPAGE] = HomePage;\r\nmodeToPage[AppMode.TWOFACTOR] = twoFactor;\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  mode1: AppMode.TWOFACTOR,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  editAccount: false,\r\n                  showEditAccountDialog: false,\r\n                  userId: \"\",\r\n                  showAbout: false};\r\n  }\r\n   //componentDidMount\r\n   componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.TWOFACTOR\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n    //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  toggleAbout = () => {\r\n    this.setState(prevState => ({showAbout: !prevState.showAbout}));\r\n  }\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n  setUserObjType = (newType) => {\r\n    this.setState({userObj: newType});\r\n  }\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div>\r\n        {this.state.showAbout ? <AboutBox hideAbout={this.toggleAbout}/> : null}\r\n        <NavBar \r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}\r\n          />\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            showAbout={this.toggleAbout}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            />\r\n           <ModePage \r\n           displayName={this.state.userObj.displayName}\r\n           profilePicURL={this.state.userObj.profilePicURL}\r\n           localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}\r\n            phoneNumber={this.state.userObj.phoneNumber}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            />\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}